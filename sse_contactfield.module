<?php

/**
 * Implements hook_field_info().
 */
function sse_contactfield_field_info() {
  return [
    'sse_contact_item' => [
      'label' => t('联系方式'),
      'description' => t('该字段存储联系方式'),
      'default_widget' => 'sse_contact_item_field',
      'default_formatter' => 'sse_relative_link'
    ]
  ];
}

/**
 * Implements hook_field_widget_info().
 */
function sse_contactfield_field_widget_info() {
  return [
    'sse_contact_item_field' => [
      'label' => t('联系方式选择输入框'),
      'field types' => ['sse_contact_item'],
    ],
  ];
}

/**
 * Implements hook_field_widget_form().
 */
function sse_contactfield_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  switch ($instance['widget']['type']) {
    case 'sse_contact_item_field':
      $element['sse_contact_item'] = [
        '#type' => 'container',
        '#title' => $element['#title'],
        '#attributes' => ['class' => ['container-inline'], 'style' => 'margin-bottom:0']
      ];
      $element['sse_contact_item']['type'] = [
        '#type' => 'select',
        '#title_display' => 'invisible',
        '#default_value' => isset($items[$delta]['type']) ? $items[$delta]['type'] : '',
        '#required' => $element['#required'],
        '#options' => [
          'none' => '- 选择 -',
          'email' => 'Email',
          'mobile' => '手机/电话',
          'wechat' => '微信',
          'qq' => 'QQ',
          'link' => '超链接',
        ]
      ];
      $element['sse_contact_item']['val'] = [
        '#type' => 'textfield',
        '#title_display' => 'invisible',
        '#default_value' => isset($items[$delta]['val']) ? $items[$delta]['val'] : '',
        '#attributes' => ['placeholder' => t('链接内容 / Email 地址 / 手机号 / 电话')],
        '#required' => $element['#required']
      ];
      $element['sse_contact_item']['title'] = [
        '#type' => 'textfield',
        '#title_display' => 'invisible',
        '#default_value' => isset($items[$delta]['title']) ? $items[$delta]['title'] : '',
        '#attributes' => ['placeholder' => t('可选标题，适用于超链接 / Email')]
      ];
      break;
  }
  return $element;
}

/**
 * Implements hook_field_presave().
 */
function sse_contactfield_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items) {
  foreach ($items as $delta => $item) {
    if (isset($item['sse_contact_item']['type'])) {
      $items[$delta]['type'] = $item['sse_contact_item']['type'];
      $items[$delta]['val'] = $item['sse_contact_item']['val'];
      $items[$delta]['title'] = $item['sse_contact_item']['title'];
    }
  }
}

/**
 * Implements hook_field_is_empty().
 */
function sse_contactfield_field_is_empty($item, $field) {
  if (empty($item['sse_contact_item']['val']) || !isset($item['sse_contact_item']['val']) || $item['sse_contact_item']['val'] === 'none') {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_field_formatter_info().
 */
function sse_contactfield_field_formatter_info() {
  return [
    'sse_relative_link' => [
      'label' => t('相关链接条目输出'),
      'field types' => ['sse_contact_item'],
    ],
  ];
}

/**
 * Implements hook_field_formatter_view().
 */
function sse_contactfield_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = [];
  switch ($display['type']) {
    case 'sse_relative_link' :
      foreach ($items as $delta => $item) {
        if (isset($item['val'])) {
          $markup = '<div class="relative-link__item">';
          switch ($item['type']) {
          case 'link':
            if (strlen($item['title']) === 0) {
              $item['title'] = $item['val'];
            }
            $markup .= '<i class="relative-link__icon icon-link"></i> <a href="'.url($item['val']).'">'.check_plain($item['title']).'</a>';
            break;
          case 'email':
            if (strlen($item['title']) === 0) {
              $item['title'] = $item['val'];
            }
            $markup .= '<i class="relative-link__icon icon-local_post_office"></i> <a href="mailto:'.check_plain($item['val']).'">'.check_plain($item['title']).'</a>';
            break;
          case 'mobile':
            $markup .= '<i class="relative-link__icon icon-phone"></i> '.check_plain($item['val']);
            break;
          case 'wechat':
            $markup .= '<i class="relative-link__icon icon-wechat"></i> '.check_plain($item['val']);
            break;
          case 'qq':
            $markup .= '<i class="relative-link__icon icon-qq"></i> '.check_plain($item['val']);
            break;
          }
          $markup .= '</div>';
          $element[$delta]['#markup'] = $markup;
        }
      }
      break;
  }
  return $element;
}
